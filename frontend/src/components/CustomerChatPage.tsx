// CustomerChatPage.tsx - Phi√™n b·∫£n ƒë∆°n gi·∫£n cho HomePage
import { useState } from "react";
import ChatBotWidget from "./ChatBotWidget";

interface CustomerChatPageProps {
  setShowChatPage?: (show: boolean) => void;
}
export default function CustomerChatPage({ setShowChatPage }: CustomerChatPageProps) {
  const [showFullScreen, setShowFullScreen] = useState(false);
  const handleBackToHome = () => {
    if (setShowChatPage) {
      setShowChatPage(false);
    } else {
      window.history.back();
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-4">
            <div>
              <h1 className="text-2xl font-bold text-gray-900">
                üí¨ Trung t√¢m h·ªó tr·ª£
              </h1>
              <p className="text-gray-600 mt-1">
                Chat tr·ª±c ti·∫øp v·ªõi nh√¢n vi√™n h·ªó tr·ª£ c·ªßa Home Express
              </p>
            </div>
            <div className="flex gap-3">
              <button
                onClick={() => setShowFullScreen(!showFullScreen)}
                className="px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition text-sm font-medium"
              >
                {showFullScreen ? "Thu nh·ªè" : "M·ªü r·ªông"}
              </button>
              <button
                onClick={handleBackToHome}
                className="px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition text-sm font-medium"
              >
                ‚Üê Quay l·∫°i trang ch·ªß
              </button>
            </div>
          </div>
        </div>
      </div>

      {/* N·ªôi dung ch√≠nh */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Th√¥ng tin h·ªó tr·ª£ */}
          <div className="lg:col-span-1 space-y-6">
            <div className="bg-white rounded-lg shadow-sm p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">
                üìû Li√™n h·ªá h·ªó tr·ª£
              </h3>
              <div className="space-y-3">
                <div className="flex items-center text-gray-600">
                  <span className="w-6">üìû</span>
                  <span>Hotline: 1900 1234</span>
                </div>
                <div className="flex items-center text-gray-600">
                  <span className="w-6">‚úâÔ∏è</span>
                  <span>Email: support@homeexpress.com</span>
                </div>
                <div className="flex items-center text-gray-600">
                  <span className="w-6">üïí</span>
                  <span>Th·ªùi gian: 7:00 - 22:00</span>
                </div>
              </div>
            </div>

            <div className="bg-white rounded-lg shadow-sm p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">
                ‚ùì C√¢u h·ªèi th∆∞·ªùng g·∫∑p
              </h3>
              <div className="space-y-2">
                {[
                  "L√†m sao ƒë·ªÉ ƒë·∫∑t d·ªãch v·ª•?",
                  "B·∫£ng gi√° d·ªãch v·ª• nh∆∞ th·∫ø n√†o?",
                  "C√≥ h·ªó tr·ª£ ƒë√≥ng g√≥i ƒë·ªì kh√¥ng?",
                  "Th·ªùi gian giao h√†ng bao l√¢u?",
                  "C√≥ b·∫£o hi·ªÉm h√†ng h√≥a kh√¥ng?"
                ].map((question, index) => (
                  <button
                    key={index}
                    className="block w-full text-left text-sm text-gray-600 hover:text-orange-500 transition p-2 rounded hover:bg-gray-50"
                    onClick={() => {
                      // T·ª± ƒë·ªông ƒëi·ªÅn c√¢u h·ªèi v√†o √¥ chat
                      const input = document.querySelector('input[placeholder*="Nh·∫≠p c√¢u h·ªèi"], input[placeholder*="Nh·∫Øn tin"]') as HTMLInputElement;
                      if (input) {
                        input.value = question;
                        input.focus();
                      }
                    }}
                  >
                    {question}
                  </button>
                ))}
              </div>
            </div>
          </div>

          {/* Khung chat - chi·∫øm 2/3 m√†n h√¨nh */}
          <div className="lg:col-span-2">
            <div className={`bg-white rounded-lg shadow-sm ${showFullScreen ? 'fixed inset-4 z-50' : 'relative'}`}>
              {showFullScreen && (
                <div className="absolute top-4 right-4 z-10">
                  <button
                    onClick={() => setShowFullScreen(false)}
                    className="w-8 h-8 bg-gray-500 text-white rounded-full flex items-center justify-center hover:bg-gray-600 transition"
                  >
                    ‚úï
                  </button>
                </div>
              )}
              {/* ChatBotWidget s·∫Ω t·ª± ƒë·ªông k·∫øt n·ªëi v·ªõi roomId ph√π h·ª£p */}
              <ChatBotWidget />
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}