import { useState } from "react";
import { Link } from "react-router-dom";
import { api } from "@/config/api";
type InterviewForm = {
  full_name: string;
  phone: string;
  email: string;
  city: string;
  vehicle_type: string;
  preferred_day: string; // YYYY-MM-DD ho·∫∑c ‚ÄúTu·∫ßn n√†y/tu·∫ßn sau‚Äù
  time_slot: string; // S√°ng/Chi·ªÅu/T·ªëi
  notes: string;
  accept_rules: boolean;
  note_image?: { url: string; public_id?: string } | null;
};

export default function DriverInterviewPage() {
  const [submitting, setSubmitting] = useState(false);
  const [ok, setOk] = useState(false);
  const [form, setForm] = useState<InterviewForm>({
    full_name: "",
    phone: "",
    email: "",
    city: "",
    vehicle_type: "",
    preferred_day: "",
    time_slot: "",
    notes: "",
    accept_rules: false,
    note_image: null,
  });
  const [uploading, setUploading] = useState(false);
  const [uploadErr, setUploadErr] = useState<string | null>(null);
  const onChange = (
    e: React.ChangeEvent<
      HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement
    >
  ) => {
    const { name, value, type, checked } = e.target as any;
    setForm((s) => ({ ...s, [name]: type === "checkbox" ? checked : value }));
  };
  const todayYMD = (() => {
    const d = new Date();
    d.setHours(0, 0, 0, 0);
    const off = d.getTimezoneOffset();
    const local = new Date(d.getTime() - off * 60000);
    return local.toISOString().slice(0, 10); // 'YYYY-MM-DD'
  })();
  async function onUploadNoteImage(file: File) {
    setUploadErr(null);
    if (!file) return;
    // ch·∫∑n file qu√° 5MB
    if (file.size > 5 * 1024 * 1024) {
      setUploadErr("·∫¢nh qu√° 5MB. Vui l√≤ng ch·ªçn ·∫£nh nh·ªè h∆°n.");
      return;
    }
    const fd = new FormData();
    fd.append("file", file);

    try {
      setUploading(true);
      // endpoint upload c√≥ s·∫µn theo backend c·ªßa b·∫°n
      const { data } = await api.post("/api/upload", fd, {
        headers: { "Content-Type": "multipart/form-data" },
      });
      // k·ª≥ v·ªçng tr·∫£ v·ªÅ: { url, public_id }
      setForm((s) => ({
        ...s,
        note_image: { url: data.url, public_id: data.public_id },
      }));
    } catch (e: any) {
      const msg =
        e?.response?.data?.message ||
        e?.message ||
        "T·∫£i ·∫£nh th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i.";
      setUploadErr(msg);
    } finally {
      setUploading(false);
    }
  }

  function onPreferredDayChange(e: React.ChangeEvent<HTMLInputElement>) {
    const v = e.target.value; // 'YYYY-MM-DD'
    if (v && v < todayYMD) {
      alert("Vui l√≤ng ch·ªçn ng√†y h√¥m nay ho·∫∑c trong t∆∞∆°ng lai.");
      setForm((s) => ({ ...s, preferred_day: todayYMD }));
    } else {
      onChange(e);
    }
  }
  const tomorrowYMD = (() => {
    const d = new Date();
    d.setDate(d.getDate() + 1);
    d.setHours(0, 0, 0, 0);
    const off = d.getTimezoneOffset();
    const local = new Date(d.getTime() - off * 60000);
    return local.toISOString().slice(0, 10);
  })();

  async function onSubmit(e: React.FormEvent) {
    e.preventDefault();
    if (!form.accept_rules)
      return alert("B·∫°n c·∫ßn ƒë·ªìng √Ω v·ªõi Quy ƒë·ªãnh & ƒêi·ªÅu kho·∫£n.");
    try {
      setSubmitting(true);
      // ‚úÖ TH√äM /api v√†o tr∆∞·ªõc URL
      await api.post("/api/driver-interviews/apply", form);
      setOk(true);
    } catch (err: any) {
      const msg =
        err?.response?.data?.message ||
        err?.message ||
        "G·ª≠i ƒëƒÉng k√Ω th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i.";
      console.error(err);
      alert(msg);
    } finally {
      setSubmitting(false);
    }
  }

  if (ok) {
    return (
      <div className="pt-24">
        <section className="max-w-2xl mx-auto px-6 py-16 text-center">
          <h1 className="text-3xl font-bold text-gray-900">
            ƒê√£ nh·∫≠n ƒëƒÉng k√Ω ph·ªèng v·∫•n
          </h1>
          <p className="mt-3 text-gray-700">
            Home Express ƒë√£ ghi nh·∫≠n th√¥ng tin c·ªßa b·∫°n. B·ªô ph·∫≠n tuy·ªÉn d·ª•ng s·∫Ω
            g·ªçi ƒëi·ªán/email ƒë·ªÉ x√°c nh·∫≠n l·ªãch ph·ªèng v·∫•n tr·ª±c ti·∫øp trong 24‚Äì48h
            (gi·ªù h√†nh ch√≠nh).
          </p>
          <Link
            to="/"
            className="mt-6 inline-block rounded-lg bg-orange-500 px-5 py-2 text-white font-semibold hover:bg-orange-600"
          >
            V·ªÅ trang ch·ªß
          </Link>
        </section>
      </div>
    );
  }

  return (
    <div className="pt-24">
      <Link
          to="/"
          className="rounded-lg bg-gray-100 px-3 py-1 text-sm hover:bg-gray-200"
        >
          ‚Üê Tr·ªü l·∫°i trang ch·ªß
        </Link>
      <section className="relative bg-gradient-to-r from-purple-700 to-blue-600 text-white py-16 text-center">
        <h1 className="text-4xl font-bold mb-2">ƒêƒÉng K√Ω PH·ªéNG V·∫§N T√†i X·∫ø</h1>
        <p className="opacity-90 max-w-3xl mx-auto">
          N·ªÅn t·∫£ng trung gian Home Express ch·ªâ ti·∫øp nh·∫≠n{" "}
          <strong>y√™u c·∫ßu ph·ªèng v·∫•n tr·ª±c ti·∫øp</strong>. ·ª®ng vi√™n ƒë·∫°t s·∫Ω k√Ω h·ª£p
          ƒë·ªìng h·ª£p t√°c v√† k√≠ch ho·∫°t t√†i kho·∫£n.
        </p>
      </section>

      {/* Quy tr√¨nh & Quy ƒë·ªãnh */}
      <section className="max-w-5xl mx-auto px-6 py-12 grid md:grid-cols-2 gap-8">
        <div className="rounded-2xl border p-6 shadow-sm">
          <h2 className="text-2xl font-bold text-gray-900">
            üõ† Quy tr√¨nh 2 b∆∞·ªõc
          </h2>
          <ol className="mt-4 list-decimal pl-5 space-y-2 text-gray-700 leading-relaxed">
            <li>N·ªôp y√™u c·∫ßu ph·ªèng v·∫•n (form b√™n ph·∫£i).</li>
            <li>
              Ph·ªèng v·∫•n tr·ª±c ti·∫øp t·∫°i vƒÉn ph√≤ng/ƒëi·ªÉm h·∫πn. ƒê·∫°t ‚Üí k√Ω h·ª£p ƒë·ªìng, x√°c
              minh h·ªì s∆°, k√≠ch ho·∫°t.
            </li>
          </ol>
          <p className="mt-4 text-sm text-gray-500">
            L∆∞u √Ω: G·ª≠i form <strong>kh√¥ng ƒë·ªìng nghƒ©a</strong> tr·ªü th√†nh t√†i x·∫ø.
            M·ªçi h·ªì s∆° ƒë·ªÅu qua v√≤ng ph·ªèng v·∫•n & x√©t duy·ªát.
          </p>
        </div>

        <div className="rounded-2xl border p-6 shadow-sm">
          <h2 className="text-2xl font-bold text-gray-900">
            ‚öñÔ∏è Quy ƒë·ªãnh & Ch·∫ø t√†i
          </h2>
          <ul className="mt-4 list-disc pl-5 space-y-2 text-gray-700 leading-relaxed">
            <li>
              <strong>Report l·∫ßn 1</strong>: C·∫£nh c√°o b·∫±ng vƒÉn b·∫£n.
            </li>
            <li>
              <strong>Report l·∫ßn 2</strong>: Tr·ª´ th√™m % thu nh·∫≠p trong k·ª≥.
            </li>
            <li>
              <strong>Report l·∫ßn 3</strong>: Ch·∫•m d·ª©t h·ª£p ƒë·ªìng h·ª£p t√°c.
            </li>
            <li>
              M·ªçi thi·ªát h·∫°i do l√†m h·ªèng/m·∫•t h√†ng ho·∫∑c x√∫c ph·∫°m kh√°ch ‚Üí{" "}
              <strong>t·ª± b·ªìi th∆∞·ªùng to√†n b·ªô</strong>.
            </li>
            <li>
              Gian l·∫≠n, hu·ª∑ ƒë∆°n c√≥ ch·ªß ƒë√≠ch, tr√¨ ho√£n giao h√†ng ‚Üí c√≥ th·ªÉ kh√≥a
              vƒ©nh vi·ªÖn.
            </li>
          </ul>
          <p className="mt-4 text-sm text-gray-500">
            Quy ƒë·ªãnh chi ti·∫øt xem t·∫°i{" "}
            <Link to="/dieu-khoan" className="underline">
              ƒêi·ªÅu kho·∫£n h·ª£p t√°c
            </Link>
            .
          </p>
        </div>
      </section>

      {/* Form ph·ªèng v·∫•n */}
      <section className="bg-gray-50">
        <div className="max-w-4xl mx-auto px-6 py-12">
          <h2 className="text-3xl font-bold text-gray-900 text-center">
            üìù Y√™u c·∫ßu ph·ªèng v·∫•n tr·ª±c ti·∫øp
          </h2>
          <form onSubmit={onSubmit} className="mt-8 grid md:grid-cols-2 gap-6">
            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-1">
                H·ªç v√† t√™n
              </label>
              <input
                name="full_name"
                value={form.full_name}
                onChange={onChange}
                required
                className="w-full rounded-lg border p-2 focus:ring-2 focus:ring-purple-500"
              />
            </div>
            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-1">
                S·ªë ƒëi·ªán tho·∫°i
              </label>
              <input
                name="phone"
                value={form.phone}
                onChange={onChange}
                required
                className="w-full rounded-lg border p-2 focus:ring-2 focus:ring-purple-500"
              />
            </div>
            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-1">
                Email
              </label>
              <input
                type="email"
                name="email"
                value={form.email}
                onChange={onChange}
                required
                className="w-full rounded-lg border p-2 focus:ring-2 focus:ring-purple-500"
              />
            </div>
            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-1">
                Khu v·ª±c ph·ªèng v·∫•n
              </label>
              <select
                name="city"
                value={form.city}
                onChange={onChange}
                required
                className="w-full rounded-lg border p-2 focus:ring-2 focus:ring-purple-500"
              >
                <option value="">-- Ch·ªçn khu v·ª±c --</option>
                <option value="hcm">TP. H·ªì Ch√≠ Minh</option>
                <option value="hn">H√† N·ªôi</option>
                <option value="dn">ƒê√† N·∫µng</option>
              </select>
            </div>
            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-1">
                Lo·∫°i xe
              </label>
              <input
                name="vehicle_type"
                value={form.vehicle_type}
                onChange={onChange}
                required
                list="vehicle_suggestions"
                placeholder="VD: Xe t·∫£i 1.25 t·∫•n, xe b√°n t·∫£i, xe 3 g√°c..."
                className="w-full rounded-lg border p-2 focus:ring-2 focus:ring-purple-500"
              />
            </div>
            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-1">
                Ng√†y mong mu·ªën
              </label>
              <input
                type="date"
                name="preferred_day"
                value={form.preferred_day}
                onChange={onPreferredDayChange}
                min={tomorrowYMD}
                required
                className="w-full rounded-lg border p-2 focus:ring-2 focus:ring-purple-500"
              />
            </div>

            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-1">
                Khung gi·ªù
              </label>
              <select
                name="time_slot"
                value={form.time_slot}
                onChange={onChange}
                required
                className="w-full rounded-lg border p-2 focus:ring-2 focus:ring-purple-500"
              >
                <option value="">-- Ch·ªçn khung gi·ªù --</option>
                <option value="morning">S√°ng (9:00‚Äì11:00)</option>
                <option value="afternoon">Chi·ªÅu (14:00‚Äì16:00)</option>
              </select>
            </div>
            <div className="md:col-span-2">
              <label className="block text-sm font-semibold text-gray-700 mb-1">
                Ghi ch√∫ (tu·ª≥ ch·ªçn)
              </label>
              <textarea
                name="notes"
                value={form.notes}
                onChange={onChange}
                rows={4}
                className="w-full rounded-lg border p-2 focus:ring-2 focus:ring-purple-500"
                placeholder="VD: C√≥ th·ªÉ mang h·ªì s∆° photo/CCCD/B·∫±ng l√°i, mong mu·ªën ph·ªèng v·∫•n t·∫°i..."
              ></textarea>

              {/* ‚ú® Upload ·∫£nh minh ho·∫° cho ghi ch√∫ */}
              <div className="mt-3">
                <div className="text-sm font-medium text-gray-700 mb-1">
                  ·∫¢nh ƒë√≠nh k√®m (tu·ª≥ ch·ªçn)
                </div>
                <input
                  type="file"
                  accept="image/*"
                  onChange={(e) => {
                    const f = e.target.files?.[0];
                    if (f) onUploadNoteImage(f);
                  }}
                />
                {uploading && (
                  <div className="text-xs text-gray-500 mt-1">
                    ƒêang t·∫£i ·∫£nh...
                  </div>
                )}
                {uploadErr && (
                  <div className="text-xs text-red-600 mt-1">{uploadErr}</div>
                )}

                {form.note_image?.url && (
                  <div className="mt-2">
                    <img
                      src={form.note_image.url}
                      alt="note"
                      className="h-24 w-24 rounded-lg object-cover border"
                    />
                    <button
                      type="button"
                      className="mt-2 text-xs text-red-600 underline"
                      onClick={() =>
                        setForm((s) => ({ ...s, note_image: null }))
                      }
                    >
                      Xo√° ·∫£nh
                    </button>
                  </div>
                )}
              </div>
            </div>

            <label className="md:col-span-2 flex items-start gap-3 text-sm text-gray-700">
              <input
                type="checkbox"
                name="accept_rules"
                checked={form.accept_rules}
                onChange={onChange}
                className="mt-1"
              />
              <span>
                T√¥i x√°c nh·∫≠n ƒë√£ ƒë·ªçc v√† ƒë·ªìng √Ω v·ªõi{" "}
                <Link to="/dieu-khoan" className="text-purple-600 underline">
                  Quy ƒë·ªãnh & ƒêi·ªÅu kho·∫£n h·ª£p t√°c
                </Link>
                , hi·ªÉu r·∫±ng ƒë√¢y ch·ªâ l√† <strong>ƒëƒÉng k√Ω ph·ªèng v·∫•n</strong>, ch∆∞a
                ph·∫£i k√≠ch ho·∫°t t√†i kho·∫£n t√†i x·∫ø.
              </span>
            </label>

            <button
              type="submit"
              disabled={submitting}
              className="md:col-span-2 rounded-xl bg-orange-500 px-5 py-3 font-semibold text-white hover:bg-orange-600 disabled:opacity-60"
            >
              {submitting ? "ƒêang g·ª≠i..." : "G·ª≠i y√™u c·∫ßu ph·ªèng v·∫•n"}
            </button>
            <p className="md:col-span-2 text-xs text-gray-500">
              B·∫±ng vi·ªác g·ª≠i, b·∫°n ƒë·ªìng √Ω ƒë·ªÉ Home Express li√™n h·ªá qua ƒëi·ªán
              tho·∫°i/email ƒë·ªÉ x√°c nh·∫≠n l·ªãch.
            </p>
          </form>
        </div>
      </section>
    </div>
  );
}
